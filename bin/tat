#!/usr/bin/env python3

__script_name__ = "NAME ME"
__version__ = "0.0.1"
__maintainer__ = "Michael Imelfort"
__email__ = "mike@mikeimelfort.com"
__status__ = "Development"
__profiling__ = False

import argparse
import sys
import os
import matplotlib.pyplot as plt

try:
    from config import Config
except ImportError:
    sys.path.append(os.path.join(os.getcwd(), 'tatt'))
    from config import Config

from layout import Layout

def do_work( args ):
    """ Main wrapper"""
    config = Config(args.config)
    print(config)
    layout = Layout(config)

    fig, ax = plt.subplots()
    layout.render(ax)

    #plt.gca().set_aspect('equal', adjustable='box')
    plt.show()
    #plt.savefig(args.filename,dpi=300,format='png')

    plt.close(fig)
    del fig

    return 0

###############################################################################

if __name__ == '__main__':

    parser = argparse.ArgumentParser()
    parser.add_argument('config', help="Config file")

    #-------------------------------------------------
    # get and check options
    args = None
    if(len(sys.argv) == 1):
        parser.print_help()
        sys.exit(0)
    elif(sys.argv[1] == '-v' or \
         sys.argv[1] == '--v' or \
         sys.argv[1] == '-version' or \
         sys.argv[1] == '--version'):
        print("%s: version: %s" % (__script_name__, __version__))
        sys.exit(0)
    elif(sys.argv[1] == '-h' or \
         sys.argv[1] == '--h' or \
         sys.argv[1] == '-help' or \
         sys.argv[1] == '--help'):
        parser.print_help()
        sys.exit(0)
    else:
        args = parser.parse_args()
    
    try:
        if(__profiling__):
            import cProfile
            cProfile.run('do_work(args)', 'prof')
            ##########################################
            ##########################################
            # Use this in python console!
            #import pstats
            #p = pstats.Stats('prof')
            #p.sort_stats('cumulative').print_stats(10)
            #p.sort_stats('time').print_stats(10)
            ##########################################
            ##########################################
        else:
            do_work(args)
    except:
        print("Unexpected error:", sys.exc_info()[0])
        raise

